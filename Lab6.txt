	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Scanner input = new Scanner(System.in);
		
		// Menu
		System.out.println("Welcome!! Which program would you like to run?");
		System.out.println("1. Interesting Numbers");
		System.out.println("2. Board Game");
		System.out.println("Enter 1 or 2:");
		
		int choice= input.nextInt();
		
		
		// User chooses 1(calls prob1)
		if (choice==1) {
			
			System.out.println("Interesting Numbers loading up!");
			System.out.println();
			problem1();
			
		}
		
		
		// User chooses 2(calls prob2)
		if (choice==2) {
			
			System.out.println("Board Game loading up!");
			System.out.println();
			problem2();
		}
	
		
	}// end of main
	
	public static void problem1(){ //will execute when user selects prob1
		
		// method using nested loops to print
		//      12345
		//		23456
		//		34567
		//		45678
		//		56789
		
		int count=1;
		for (int i=0; i<5; i++) {
			for (int c=0; c<5; c++) {
				System.out.print(count+c); 
			}
			count++;
			System.out.println();
		}
		
	}
	public static void problem2(){//will execute when user selects prob2
		
		Scanner input = new Scanner(System.in);
		// 9x9 board
		// begins with board printed out and piece in middle
		// user can move piece N,S,W,E of board
		// piece will wrap to other side of board if out of bounds
		// prints board again when user is done making moves
		// Only prints board out twice
		char [][] board= new char[9][9];
		int x=4; //piece position horizontal (c in board array)
		int y=4; //piece position vertical (i in board array)
		int abs; //absolute value used for wrapping
		
		//makes initial board 
		for (int i=0; i<board.length; i++) {
			for (int c=0; c<board.length;c++) {
				board[i][c]='-';
			}
		}
		
		//prints initial board
		for (int i=0; i<board.length; i++) {
			for (int c=0; c<board.length;c++) {
				if (i==4 && c==4) {
					board[i][c]='x';
				}
				System.out.print(board[i][c]);
			}
			System.out.println();
		}// end of function to print initial board (#1)
		
		
		boolean game=true;
		
		char north='N';
		char south='S';
		char west='W';
		char east='E';
		int spaces;
		while (game==true) {
			
			System.out.println("Where would you like to move the piece?");
			System.out.println("Use N for North");
			System.out.println("Use S for South");
			System.out.println("Use W for West");
			System.out.println("Use E for East");
			
			char move=input.next().charAt(0);
			

			if (move=='Q') {
				game=false;
				
				for (int i=0; i<board.length; i++) {
					for (int c=0; c<board.length;c++) {
						System.out.print(board[i][c]);
					}
					System.out.println();
				}
			}
			else if (move== north) {
				System.out.println("How many spaces do you want to move the piece?");
				spaces= input.nextInt();
				board [y][x]='-';
				y=y-spaces;
				while (y<0) {
					
					abs = Math.abs(y);
					y = ((board.length-1)- abs)+1;
				}
				board[y][x]='x';
				game=true;
			}
			else if (move== south) {
				System.out.println("How many spaces do you want to move the piece?");
				spaces= input.nextInt();
				board [y][x]='-';
				y=y+spaces;
				while (y>=9) {

					abs = y - 8;					
					y= (0 + abs)-1;
				}
				board[y][x]='x';
				
			}
			else if (move== west) {
				System.out.println("How many spaces do you want to move the piece?");
				spaces= input.nextInt();
				board [y][x]='-';
				x=x-spaces;
				
				while (x<0) {

					abs = Math.abs(x);					
					x= ((board.length-1) - abs)+1;
				}
				board[y][x]='x';

			}
			else if (move== east) {
				System.out.println("How many spaces do you want to move the piece?");
				spaces= input.nextInt();
				board [y][x]='-';
				x=x+spaces;
				while (x>=9) {

					abs = x - 8;					
					x= (0 + abs)-1;
				}
				board[y][x]='x';

			}
			else {
				game=false;
				
				for (int i=0; i<board.length; i++) {
					for (int c=0; c<board.length;c++) {
						System.out.print(board[i][c]);
					}
					System.out.println();
				}	
			}
			
		}//end of while loop
		
	}//end of problem2
